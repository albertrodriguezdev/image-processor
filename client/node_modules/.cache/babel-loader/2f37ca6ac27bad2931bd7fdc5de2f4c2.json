{"ast":null,"code":"var _jsxFileName = \"/home/rodrik/Documents/CADT/Albert_Rodriguez_Exercises/Exercise_1/image-processor/src/component/Main.jsx\";\nimport React from 'react';\nimport './Main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Main extends React.Component {\n  componentDidMount() {\n    this.uploadButton.addEventListener('click', this.openDialogUpload);\n  }\n\n  componentWillUnmount() {\n    this.uploadButton.removeEventListener('click', this.openDialogUpload);\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.openDialogUpload = event => {\n      this.uploadInput.click();\n    };\n\n    this.state = {\n      originalURL: '',\n      processedURL: '',\n      originalImgClass: 'originalImg',\n      processButtonDisabled: 'true',\n      errorTextContent: ''\n    };\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n  }\n\n  handleUploadImage(ev) {\n    this.errorText.hidden = true;\n    ev.preventDefault();\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n    fetch('http://localhost:5000/upload', {\n      method: 'POST',\n      body: data\n    }).then(response => {\n      response.json().then(body => {\n        this.setState({\n          originalURL: `http://localhost:5000/${body.file}`\n        });\n        this.setState({\n          originalImgClass: 'img'\n        });\n        /*originalImg.className = \"img\";*/\n\n        this.processButton.disabled = false;\n      });\n    }, // Note: it's important to handle errors here \n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components\n    err => {\n      this.errorText.hidden = false;\n      this.errorText.textContent = \"Fatal error! Can't connect to the server.\";\n    });\n  }\n\n  handleProcessImage(ev) {\n    this.errorText.hidden = true;\n    ev.preventDefault();\n    /*const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);  */\n\n    fetch('http://localhost:5000/process', {\n      method: 'POST' //body: data,\n\n    }).then(response => {\n      response.json().then(body => {\n        this.setState({\n          processedURL: `http://localhost:5000/${body.file}`\n        });\n      });\n    });\n    this.processImg.className = \"img\";\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Image Processor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"one\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Original image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              ref: elem => this.originalImg = elem,\n              id: \"originalImg\",\n              className: this.state.originalImgClass,\n              src: this.state.originalURL,\n              alt: \"Snow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"two\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Processed image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"processImg\",\n              className: \"processedImg\",\n              src: \"https://www.w3schools.com/howto/img_snow_wide.jpg\",\n              alt: \"Snow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonsContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: elem => this.uploadInput = elem,\n            onChange: this.handleUploadImage,\n            id: \"uploadInput\",\n            type: \"file\",\n            accept: \"image/jpeg, image/png\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: elem => this.uploadButton = elem,\n            id: \"uploadButton\",\n            type: \"button\",\n            className: \"button\",\n            value: \"Upload the image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: elem => this.processButton = elem,\n            id: \"processButton\",\n            type: \"button\",\n            className: \"button\",\n            value: \"Process the image\",\n            disabled: this.state.processButtonDisabled\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          ref: elem => this.errorText = elem,\n          id: \"processButton\",\n          className: \"errorText\",\n          hidden: true,\n          children: this.setState.errorTextContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Main;","map":{"version":3,"names":["React","Main","Component","componentDidMount","uploadButton","addEventListener","openDialogUpload","componentWillUnmount","removeEventListener","constructor","props","event","uploadInput","click","state","originalURL","processedURL","originalImgClass","processButtonDisabled","errorTextContent","handleUploadImage","bind","ev","errorText","hidden","preventDefault","data","FormData","append","files","fetch","method","body","then","response","json","setState","file","processButton","disabled","err","textContent","handleProcessImage","processImg","className","render","elem","originalImg"],"sources":["/home/rodrik/Documents/CADT/Albert_Rodriguez_Exercises/Exercise_1/image-processor/src/component/Main.jsx"],"sourcesContent":["import React from 'react';\nimport './Main.css';\nclass Main extends React.Component {\n\n  componentDidMount() {\n    this.uploadButton.addEventListener('click', this.openDialogUpload)\n  }\n\n  componentWillUnmount() {\n    this.uploadButton.removeEventListener('click', this.openDialogUpload)\n  }\n\n  openDialogUpload = (event) => {\n    this.uploadInput.click();\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      originalURL: '',\n      processedURL: '',\n      originalImgClass: 'originalImg',\n      processButtonDisabled: 'true',\n      errorTextContent: '',\n    };\n\n    this.handleUploadImage = this.handleUploadImage.bind(this);\n  }\n\n  handleUploadImage(ev) \n  {\n    this.errorText.hidden = true;\n    ev.preventDefault();\n    const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);\n    \n      fetch('http://localhost:5000/upload', {\n        method: 'POST',\n        body: data,\n      }).then((response) => {\n        response.json().then((body) => {\n          this.setState({ originalURL: `http://localhost:5000/${body.file}` });\n          this.setState({ originalImgClass: 'img'})/*originalImg.className = \"img\";*/\n          this.processButton.disabled = false;\n        });\n      }, // Note: it's important to handle errors here \n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components\n      err => {          \n        this.errorText.hidden = false;        \n          this.errorText.textContent = \"Fatal error! Can't connect to the server.\";\n      });    \n  }\n\n  handleProcessImage(ev) {\n    this.errorText.hidden = true;\n    ev.preventDefault();\n    /*const data = new FormData();\n    data.append('file', this.uploadInput.files[0]);  */\n\n    fetch('http://localhost:5000/process', {\n      method: 'POST',\n      //body: data,\n    }).then((response) => {\n      response.json().then((body) => {\n        this.setState({ processedURL: `http://localhost:5000/${body.file}` });\n      });\n    });\n    this.processImg.className = \"img\";\n  }\n\n\n\n  render() {\n    return (\n      <div>\n        <header className=\"App-header\">\n          <h1>Image Processor</h1>\n        </header>\n        <div className=\"wrapper\">\n          <div id=\"one\">\n            <h1>Original image</h1>\n            <div className='container'>\n              <img ref={elem => this.originalImg = elem} id=\"originalImg\" className={this.state.originalImgClass} src={this.state.originalURL} alt=\"Snow\" />\n            </div>\n          </div>\n          <div id=\"two\">\n            <h1>Processed image</h1>\n            <div className='container'>\n              <img id=\"processImg\" className='processedImg' src=\"https://www.w3schools.com/howto/img_snow_wide.jpg\" alt=\"Snow\" />\n            </div>\n          </div>\n          <div className='buttonsContainer'>\n            <input ref={elem => this.uploadInput = elem} onChange={this.handleUploadImage} id='uploadInput' type='file' accept=\"image/jpeg, image/png\" hidden />\n            <input ref={elem => this.uploadButton = elem} id='uploadButton' type=\"button\" className='button' value=\"Upload the image\" />\n            <input ref={elem => this.processButton = elem} id='processButton' type=\"button\" className='button' value=\"Process the image\" disabled={this.state.processButtonDisabled} />\n          </div>\n          <p ref={elem => this.errorText = elem} id='processButton' className=\"errorText\" hidden>{this.setState.errorTextContent}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;;AACA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;EAEjCC,iBAAiB,GAAG;IAClB,KAAKC,YAAL,CAAkBC,gBAAlB,CAAmC,OAAnC,EAA4C,KAAKC,gBAAjD;EACD;;EAEDC,oBAAoB,GAAG;IACrB,KAAKH,YAAL,CAAkBI,mBAAlB,CAAsC,OAAtC,EAA+C,KAAKF,gBAApD;EACD;;EAMDG,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAJnBJ,gBAImB,GAJCK,KAAD,IAAW;MAC5B,KAAKC,WAAL,CAAiBC,KAAjB;IACD,CAEkB;;IAGjB,KAAKC,KAAL,GAAa;MACXC,WAAW,EAAE,EADF;MAEXC,YAAY,EAAE,EAFH;MAGXC,gBAAgB,EAAE,aAHP;MAIXC,qBAAqB,EAAE,MAJZ;MAKXC,gBAAgB,EAAE;IALP,CAAb;IAQA,KAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;EACD;;EAEDD,iBAAiB,CAACE,EAAD,EACjB;IACE,KAAKC,SAAL,CAAeC,MAAf,GAAwB,IAAxB;IACAF,EAAE,CAACG,cAAH;IACA,MAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;IACAD,IAAI,CAACE,MAAL,CAAY,MAAZ,EAAoB,KAAKhB,WAAL,CAAiBiB,KAAjB,CAAuB,CAAvB,CAApB;IAEEC,KAAK,CAAC,8BAAD,EAAiC;MACpCC,MAAM,EAAE,MAD4B;MAEpCC,IAAI,EAAEN;IAF8B,CAAjC,CAAL,CAGGO,IAHH,CAGSC,QAAD,IAAc;MACpBA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBD,IAAD,IAAU;QAC7B,KAAKI,QAAL,CAAc;UAAErB,WAAW,EAAG,yBAAwBiB,IAAI,CAACK,IAAK;QAAlD,CAAd;QACA,KAAKD,QAAL,CAAc;UAAEnB,gBAAgB,EAAE;QAApB,CAAd;QAAyC;;QACzC,KAAKqB,aAAL,CAAmBC,QAAnB,GAA8B,KAA9B;MACD,CAJD;IAKD,CATD,EASG;IACH;IACA;IACAC,GAAG,IAAI;MACL,KAAKjB,SAAL,CAAeC,MAAf,GAAwB,KAAxB;MACE,KAAKD,SAAL,CAAekB,WAAf,GAA6B,2CAA7B;IACH,CAfD;EAgBH;;EAEDC,kBAAkB,CAACpB,EAAD,EAAK;IACrB,KAAKC,SAAL,CAAeC,MAAf,GAAwB,IAAxB;IACAF,EAAE,CAACG,cAAH;IACA;AACJ;;IAEIK,KAAK,CAAC,+BAAD,EAAkC;MACrCC,MAAM,EAAE,MAD6B,CAErC;;IAFqC,CAAlC,CAAL,CAGGE,IAHH,CAGSC,QAAD,IAAc;MACpBA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBD,IAAD,IAAU;QAC7B,KAAKI,QAAL,CAAc;UAAEpB,YAAY,EAAG,yBAAwBgB,IAAI,CAACK,IAAK;QAAnD,CAAd;MACD,CAFD;IAGD,CAPD;IAQA,KAAKM,UAAL,CAAgBC,SAAhB,GAA4B,KAA5B;EACD;;EAIDC,MAAM,GAAG;IACP,oBACE;MAAA,wBACE;QAAQ,SAAS,EAAC,YAAlB;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAK,SAAS,EAAC,SAAf;QAAA,wBACE;UAAK,EAAE,EAAC,KAAR;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAK,SAAS,EAAC,WAAf;YAAA,uBACE;cAAK,GAAG,EAAEC,IAAI,IAAI,KAAKC,WAAL,GAAmBD,IAArC;cAA2C,EAAE,EAAC,aAA9C;cAA4D,SAAS,EAAE,KAAKhC,KAAL,CAAWG,gBAAlF;cAAoG,GAAG,EAAE,KAAKH,KAAL,CAAWC,WAApH;cAAiI,GAAG,EAAC;YAArI;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAOE;UAAK,EAAE,EAAC,KAAR;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAK,SAAS,EAAC,WAAf;YAAA,uBACE;cAAK,EAAE,EAAC,YAAR;cAAqB,SAAS,EAAC,cAA/B;cAA8C,GAAG,EAAC,mDAAlD;cAAsG,GAAG,EAAC;YAA1G;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA,QAPF,eAaE;UAAK,SAAS,EAAC,kBAAf;UAAA,wBACE;YAAO,GAAG,EAAE+B,IAAI,IAAI,KAAKlC,WAAL,GAAmBkC,IAAvC;YAA6C,QAAQ,EAAE,KAAK1B,iBAA5D;YAA+E,EAAE,EAAC,aAAlF;YAAgG,IAAI,EAAC,MAArG;YAA4G,MAAM,EAAC,uBAAnH;YAA2I,MAAM;UAAjJ;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAO,GAAG,EAAE0B,IAAI,IAAI,KAAK1C,YAAL,GAAoB0C,IAAxC;YAA8C,EAAE,EAAC,cAAjD;YAAgE,IAAI,EAAC,QAArE;YAA8E,SAAS,EAAC,QAAxF;YAAiG,KAAK,EAAC;UAAvG;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YAAO,GAAG,EAAEA,IAAI,IAAI,KAAKR,aAAL,GAAqBQ,IAAzC;YAA+C,EAAE,EAAC,eAAlD;YAAkE,IAAI,EAAC,QAAvE;YAAgF,SAAS,EAAC,QAA1F;YAAmG,KAAK,EAAC,mBAAzG;YAA6H,QAAQ,EAAE,KAAKhC,KAAL,CAAWI;UAAlJ;YAAA;YAAA;YAAA;UAAA,QAHF;QAAA;UAAA;UAAA;UAAA;QAAA,QAbF,eAkBE;UAAG,GAAG,EAAE4B,IAAI,IAAI,KAAKvB,SAAL,GAAiBuB,IAAjC;UAAuC,EAAE,EAAC,eAA1C;UAA0D,SAAS,EAAC,WAApE;UAAgF,MAAM,MAAtF;UAAA,UAAwF,KAAKV,QAAL,CAAcjB;QAAtG;UAAA;UAAA;UAAA;QAAA,QAlBF;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EA2BD;;AApGgC;;AAuGnC,eAAelB,IAAf"},"metadata":{},"sourceType":"module"}